<?php
namespace app\admin\controller;

use think\Db;

class PackagePrice extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    public function index()
    {
        $PackagePrice = model('PackagePrice');
        if(request()->isPost()) {
            $page = request()->post('page', 1);
            $limit = request()->post('limit', 10);
            $offset = ($page - 1) * $limit;
            $package = model('package');
            $map = ['A.status'=>1];
            $data = $PackagePrice->alias('A')
                ->join($package->getTable().' B', 'A.package_id=B.id', 'left')
                ->field('A.*,B.title as package_title')
                ->where($map)->order('id desc')->limit($offset, $limit)->select();
            foreach ($data as $k => $v) {
                $v['key'] = $k+ ($page-1)*$limit+1;
                $data[$k] = $v;
            }
            $count = $PackagePrice->alias('A')
                ->join($package->getTable().' B', 'A.package_id=B.id', 'left')
                ->where($map)->count();
            return json(['data' => [ 'count' => $count, 'list' => $data]], 200);
        }
        return view('', [
            'type' => $PackagePrice->type
        ]);
    }

    public function create()
    {
        $PackagePriceHistory = model('PackagePriceHistory');
        $PackagePrice = model('PackagePrice');
        if(request()->isPost()) {
            $_post = request()->post();
            $state = false;
            Db::startTrans();

            try {
                $PackagePriceHistory->saveId($_post);
                $_post['history_id'] = $PackagePriceHistory->id;
                $PackagePrice->allowField(true)->isUpdate(false)->save($_post);
                Db::commit();
                $state = true;
            } catch (\Exception $e) {
                Db::rollback();
                $state = false;
            }


            if($state !== false) {
                return success_json('添加成功');
            }
            return error_json('添加失败');
        }
        $packageInfo = model('package')->where(['status'=>1])->select();
        return view('', [
            'type' => $PackagePrice->type,
            'info' => $packageInfo,
        ]);
    }

    public function edit($id)
    {
        $PackagePrice = model('PackagePrice');
        if(request()->isPost()) {
            $_post = request()->post();
            $state = false;
            $PackagePriceHistory = model('PackagePriceHistory');
            $save = $_post;
            unset($save['id']);
            Db::startTrans();
            try {
                unset($save['id']);
                $PackagePriceHistory->saveId($save);
                $_post['history_id'] = $PackagePriceHistory->id;
                $PackagePrice->allowField(true)->isUpdate(true)->save($_post, ['id'=>$id]);
                Db::commit();
                $state = true;
            }catch (\Exception $e) {
                Db::rollback();
                $state = false;
            }

            if($state !== false) {
                return success_json('编辑成功');
            }
            return error_json('编辑失败');
        }
        $packageInfo = model('package')->where(['status'=>1])->select();
        $data = $PackagePrice->find($id);
        return view('', [
            'type' => $PackagePrice->type,
            'info' => $packageInfo,
            'data' => $data
        ]);
    }

    public function delete($id)
    {
        $PackagePrice = model('PackagePrice');
        $state = $PackagePrice->allowField(true)->isUpdate(true)->save(['status' => 0], ['id' => $id]);
        if($state !== false) {
            return success_json('删除成功');
        }
        return error_json('删除失败');
    }

}